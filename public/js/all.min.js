(function () {
  angular.module('football.service.articles', []);
  angular.module('football.service.commands', []);
  angular.module('football.service.members', []);
  angular.module('football.service.tags', []);
  angular.module('football.menu', []);
  angular.module('football.service.color', []);

  angular
      .module('football.controller.articles', [
        'football.service.articles'
      ]);
  angular
      .module('football.controller.commands', [
        'football.service.commands'
      ]);
  angular
      .module('football.controller.members', [
        'football.service.members'
      ]);
  angular
      .module('football.controller.tags', [
        'football.service.tags'
      ]);

  angular
      .module('football.controllers', [
        'football.controller.articles',
        'football.controller.commands',
        'football.controller.members',
        'football.controller.tags',
        'football.menu',
        'football.service.color'
      ]);
})();

(function () {
  angular
      .module("football", [
        'ngMaterial',
        'ngMdIcons',
        'ui.router',
        'football.controllers',
        'ngFileUpload'
      ])
      .constant("server_host", "http://intertech-app2.pp.ua/")
      .config(function ($stateProvider, $urlRouterProvider) {
        $urlRouterProvider.otherwise("/");

        $stateProvider
            .state("index", {
              url: "/",
              controller: "ArticlesCtrl",
              templateUrl: "components/articles/articles.html"
            })
            .state("article", {
              url: "/articles/:id",
              controller: "ArticleCtrl",
              templateUrl: "components/articles/article.html"
            })
            .state("commands", {
              url: "/commands",
              controller: "CommandsCtrl",
              templateUrl: "components/commands/commands.html"
            })
            .state("command", {
              url: "/commands/:id",
              controller: "CommandCtrl",
              templateUrl: "components/commands/command.html"
            })
            .state("members", {
              url: "/members",
              controller: "MembersCtrl",
              templateUrl: "components/members/members.html"
            })
            .state("member", {
              url: "/members/:id",
              controller: "MemberCtrl",
              templateUrl: "components/members/member.html"
            })
            .state("tag", {
              url: "/tags/:id",
              controller: "TagCtrl",
              templateUrl: "components/tags/tag.html"
            })
        ;
      })
  ;
})();

(function () {
  angular
      .module('football.menu')
      .controller('MenuController', MenuController);

  MenuController.$inject = ['$mdBottomSheet'];

  function MenuController($mdBottomSheet) {
    var vm = this;
    //vm.menu = [
    //  { name: 'Новини', url: 'index' },
    //  { name: 'Команди', url: 'commands' },
    //  { name: 'Гравці', url: 'members' }
    //];

    vm.openMobileMenu = function ($event) {
      $mdBottomSheet.show({
        controller: 'MenuMobileController',
        controllerAs: 'menuMobile',
        templateUrl: '/menu/mobile/menu-mobile.html',
        clickOutsideToClose: true,
        targetEvent: $event
      });
    }
  }
})();

(function () {
  'use strict';

  angular
      .module('football.menu')
      .directive('menu', menu);

  menu.$inject = [];

  function menu() {
    return {
      replace: true,
      controller: 'MenuController',
      controllerAs: 'menu',
      templateUrl: 'menu/menu.html'
    };
  }
})();
(function () {
  angular
      .module('football.service.color')
      .factory('ColorUtils', ColorUtils);

  ColorUtils.$inject = [];

  function ColorUtils() {
    var COLORS = ['#ffebee', '#ffcdd2', '#ef9a9a', '#e57373', '#ef5350', '#f44336', '#e53935', '#d32f2f', '#c62828', '#b71c1c',
      '#ff8a80', '#ff5252', '#ff1744', '#d50000', '#f8bbd0', '#f48fb1', '#f06292', '#ec407a', '#e91e63', '#d81b60', '#c2185b',
      '#ad1457', '#880e4f', '#ff80ab', '#ff4081', '#f50057', '#c51162', '#e1bee7', '#ce93d8', '#ba68c8', '#ab47bc', '#9c27b0',
      '#8e24aa', '#7b1fa2', '#4a148c', '#ea80fc', '#e040fb', '#d500f9', '#aa00ff', '#ede7f6', '#d1c4e9', '#b39ddb', '#9575cd',
      '#7e57c2', '#673ab7', '#5e35b1', '#4527a0', '#311b92', '#b388ff', '#7c4dff', '#651fff', '#6200ea', '#c5cae9', '#9fa8da',
      '#7986cb', '#5c6bc0', '#3f51b5', '#3949ab', '#303f9f', '#283593', '#1a237e', '#8c9eff', '#536dfe', '#3d5afe', '#304ffe',
      '#e3f2fd', '#bbdefb', '#90caf9', '#64b5f6', '#42a5f5', '#2196f3', '#1e88e5', '#1976d2', '#1565c0', '#0d47a1', '#82b1ff',
      '#448aff', '#2979ff', '#2962ff', '#b3e5fc', '#81d4fa', '#4fc3f7', '#29b6f6', '#03a9f4', '#039be5', '#0288d1', '#0277bd',
      '#01579b', '#80d8ff', '#40c4ff', '#00b0ff', '#0091ea', '#e0f7fa', '#b2ebf2', '#80deea', '#4dd0e1', '#26c6da', '#00bcd4',
      '#00acc1', '#0097a7', '#00838f', '#006064', '#84ffff', '#18ffff', '#00e5ff', '#00b8d4', '#e0f2f1', '#b2dfdb', '#80cbc4',
      '#4db6ac', '#26a69a', '#009688', '#00897b', '#00796b', '#00695c', '#a7ffeb', '#64ffda', '#1de9b6', '#00bfa5', '#e8f5e9',
      '#c8e6c9', '#a5d6a7', '#81c784', '#66bb6a', '#4caf50', '#43a047', '#388e3c', '#2e7d32', '#1b5e20', '#b9f6ca', '#69f0ae',
      '#00e676', '#00c853', '#f1f8e9', '#dcedc8', '#c5e1a5', '#aed581', '#9ccc65', '#8bc34a', '#7cb342', '#689f38', '#558b2f',
      '#33691e', '#ccff90', '#b2ff59', '#76ff03', '#64dd17', '#f9fbe7', '#f0f4c3', '#e6ee9c', '#dce775', '#d4e157', '#cddc39',
      '#c0ca33', '#afb42b', '#9e9d24', '#827717', '#f4ff81', '#eeff41', '#c6ff00', '#aeea00', '#fffde7', '#fff9c4', '#fff59d',
      '#fff176', '#ffee58', '#ffeb3b', '#fdd835', '#fbc02d', '#f9a825', '#f57f17', '#ffff8d', '#ffff00', '#ffea00', '#ffd600',
      '#fff8e1', '#ffecb3', '#ffe082', '#ffd54f', '#ffca28', '#ffc107', '#ffb300', '#ffa000', '#ff8f00', '#ff6f00', '#ffe57f',
      '#ffd740', '#ffc400', '#ffab00', '#fff3e0', '#ffe0b2', '#ffcc80', '#ffb74d', '#ffa726', '#ff9800', '#fb8c00', '#f57c00',
      '#ef6c00', '#e65100', '#ffd180', '#ffab40', '#ff9100', '#ff6d00', '#fbe9e7', '#ffccbc', '#ffab91', '#ff8a65', '#ff7043',
      '#ff5722', '#f4511e', '#e64a19', '#d84315', '#bf360c', '#ff9e80', '#ff6e40', '#ff3d00', '#dd2c00', '#d7ccc8', '#bcaaa4',
      '#795548', '#d7ccc8', '#bcaaa4', '#8d6e63', '#eceff1', '#cfd8dc', '#b0bec5', '#90a4ae', '#78909c', '#607d8b', '#546e7a',
      '#cfd8dc', '#b0bec5', '#78909c'];

    return {
      get: function () {
        return COLORS[Math.floor(Math.random() * COLORS.length)];
      }
    }
  }
})();

(function () {
  angular
      .module('football.controller.articles')
      .controller('ArticleCtrl', ArticleCtrl);

  ArticleCtrl.$inject = [
    '$scope',
    '$state',
    '$stateParams',
    'ArticlesUtils',
    'ColorUtils'
  ];

  //Current article block
  function ArticleCtrl($scope, $state, $stateParams, ArticlesUtils, ColorUtils) {
    ArticlesUtils
        .get($stateParams.id)
        .then(function (response) {
          $scope.article = response.data;
          $scope.article.color = ColorUtils.get();
        }, function (error) {
          console.log(error);
        });

    $scope.go = function (state, id) {
      $state.go(state, {id: id});
    };
  }
})();

(function () {
  angular
      .module('football.controller.articles')
      .controller('ArticlesCtrl', ArticlesCtrl);

  ArticlesCtrl.$inject = [
    '$scope',
    '$mdDialog',
    '$state',
    'ArticlesUtils',
    'ColorUtils'
  ];

  //Block articles controller
  function ArticlesCtrl($scope, $mdDialog, $state, ArticlesUtils, ColorUtils) {

    $scope.backgroundColor = function () {
      for (var item in $scope.articles) {
        $scope.articles[item].color = ColorUtils.get();
      }
    };

    ArticlesUtils
        .all()
        .then(function (response) {
          $scope.articles = response.data.data;
          $scope.backgroundColor();
        }, function (error) {
          console.log(error);
        });

    $scope.go = function (state, id) {
      $state.go(state, {id: id});
    };

    $scope.showModal = function (ev) {
      $mdDialog.show({
            controller: 'CreateArticleCtrl',
            templateUrl: 'components/articles/create-article.html',
            targetEvent: ev
          })
          .then(function (answer) {
            console.log(answer);

            tags = [];

            for (var i = 0; i < answer.tags.length; i++) {
              tag = {
                title: answer.tags[i]
              };

              tags.push(tag);
            }

            answer.tags = tags;

            $scope.articles.splice(0, 0, answer)
          }, function () {

          });
    }
  }
})();

(function () {
  angular
      .module('football.directive.index', []);
})();

(function () {
  angular
      .module('football.service.articles')
      .factory('ArticlesUtils', ArticlesUtils);

  ArticlesUtils.$inject = [
    '$http',
    '$q',
    'server_host'
  ];

  function ArticlesUtils($http, $q, server_host) {
    return {
      all: function () {
        var defer = $q.defer();

        console.log(1);

        $http
            .get(server_host + "/api/articles")
            .then(function (success) {
              defer.resolve(success)
            }, function (error) {
              defer.reject(error)
            });

        return defer.promise;
      },
      get: function (id) {
        var defer = $q.defer();

        $http
            .get(server_host + "/api/articles/" + id)
            .then(function (success) {
              defer.resolve(success)
            }, function (error) {
              defer.reject(error)
            });

        return defer.promise
      },
      create: function (data) {
        var defer = $q.defer();

        $http
            .post(server_host + "/api/articles", data)
            .then(function (success) {
              defer.resolve(success);
            }, function (error) {
              defer.reject();
            });

        return defer.promise;
      }
    }
  }
})();
(function () {
  angular
      .module('football.controller.articles')
      .controller('CreateArticleCtrl', CreateArticleCtrl);

  CreateArticleCtrl.$inject = [
    '$scope',
    '$mdDialog',
    'ArticlesUtils'
  ];

  //Current article block
  function CreateArticleCtrl($scope, $mdDialog, ArticlesUtils) {
    $scope.article = {
      tags: []
    };

    $scope.cancel = function () {
      $mdDialog.cancel();
    };

    $scope.answer = function (answer) {
      ArticlesUtils
          .create(answer)
          .then(function () {
            $mdDialog.hide(answer);

            alert('Стаття успішно створена!')
          }, function () {

          });
    };
  }
})();

(function () {
  angular
      .module('football.controller.commands')
      .controller('CommandCtrl', CommandCtrl);

  CommandCtrl.$inject = [
    '$scope',
    '$state',
    '$stateParams',
    'CommandsUtils',
    'ColorUtils'
  ];

  //Command Ctrl block
  function CommandCtrl($scope, $state, $stateParams, CommandsUtils, ColorUtils) {
    CommandsUtils
        .get($stateParams.id)
        .then(function (response) {
          $scope.command = response.data;
          $scope.command.color = ColorUtils.get();
          $scope.command.colorList = ColorUtils.get();
        }, function (error) {

        });

    $scope.go = function (state, id) {
      $state.go(state, {id: id});
    };
  }
})();

(function () {
  angular
      .module('football.controller.commands')
      .controller('CommandsCtrl', CommandsCtrl);

  CommandsCtrl.$inject = [
    '$scope',
    '$mdDialog',
    '$state',
    'CommandsUtils',
    'ColorUtils'
  ];

  //Commands Controller block
  function CommandsCtrl($scope, $mdDialog, $state, CommandsUtils, ColorUtils) {
    $scope.backgroundColor = function () {
      for (var item in $scope.commands) {
        $scope.commands[item].color = ColorUtils.get();
      }
    };

    CommandsUtils
        .all()
        .then(function (response) {
          $scope.commands = response.data.data;
          $scope.backgroundColor();
        }, function (error) {

        });

    $scope.go = function (state, id) {
      $state.go(state, {id: id});
    };

    $scope.showModal = function (ev) {
      $mdDialog.show({
            controller: 'CreateCommandCtrl',
            templateUrl: 'components/commands/create-command.html',
            targetEvent: ev
          })
          .then(function (answer) {
            console.log(answer)
          }, function () {

          });
    }
  }
})();

(function () {
  angular
      .module('football.service.commands')
      .factory('CommandsUtils', CommandsUtils);

  CommandsUtils.$inject = [
    '$http',
    '$q',
    'Upload',
    'server_host'
  ];

  function CommandsUtils($http, $q, Upload, server_host) {
    return {
      all: function () {
        var defer = $q.defer();

        $http
            .get(server_host + "/api/commands")
            .then(function (success) {
              defer.resolve(success)
            }, function (error) {
              defer.reject(error)
            });

        return defer.promise;
      },
      get: function (id) {
        var defer = $q.defer();

        $http
            .get(server_host + "/api/commands/" + id)
            .then(function (success) {
              defer.resolve(success)
            }, function (error) {
              defer.reject(error)
            });

        return defer.promise;
      },
      create: function (data) {
        var defer = $q.defer();

        Upload.upload({
          url: server_host + "/api/commands",
          data: data
        }).then(function (resp) {
          defer.resolve(resp);
        }, function (resp) {
          console.log('Error status: ' + resp.status);

          defer.reject(resp)
        }, function (evt) {
          var progressPercentage = parseInt(100.0 * evt.loaded / evt.total);
        });

        return defer.promise;
      }
    }
  }
})();

(function () {
  angular
      .module('football.controller.commands')
      .controller('CreateCommandCtrl', CreateCommandCtrl);

  CreateCommandCtrl.$inject = [
    '$scope',
    '$mdDialog',
    'CommandsUtils'
  ];

  //Create Command Controller
  function CreateCommandCtrl($scope, $mdDialog, CommandsUtils) {
    $scope.cancel = function () {
      $mdDialog.cancel();
    };

    $scope.answer = function (answer) {
      CommandsUtils
          .create(answer)
          .then(function (response) {
            $mdDialog.hide(answer);

            alert('Команда успішно створена!')
          }, function (error) {

          });
    };
  }
})();

(function () {
  angular
      .module('football.controller.members')
      .controller('CreateMemberCtrl', CreateMemberCtrl);

  CreateMemberCtrl.$inject = [
    '$scope',
    '$mdDialog',
    'MembersUtils',
    'CommandsUtils'
  ];

  function CreateMemberCtrl($scope, $mdDialog, MembersUtils, CommandsUtils) {
    CommandsUtils
        .all()
        .then(function (response) {
          $scope.commands = response.data.data;
        }, function (error) {

        });

    $scope.cancel = function () {
      $mdDialog.cancel();
    };

    $scope.answer = function (answer) {
      MembersUtils
          .create(answer)
          .then(function (response) {
            $mdDialog.hide(answer);

            alert('Футболіст успішно добавлений')
          }, function () {

          });
    };
  }
})();

(function () {
  angular
      .module('football.controller.members')
      .controller('MemberCtrl', MemberCtrl);

  MemberCtrl.$inject = [
    '$scope',
    '$state',
    '$stateParams',
    'MembersUtils',
      'ColorUtils'
  ];

  function MemberCtrl($scope, $state, $stateParams, MembersUtils, ColorUtils) {
    MembersUtils
        .get($stateParams.id)
        .then(function (response) {
          $scope.member = response.data;
          $scope.member.color = ColorUtils.get();
        }, function (error) {

        });

    $scope.go = function (state, id) {
      $state.go(state, {id: id});
    };
  }
})();

(function () {
  angular
      .module('football.controller.members')
      .controller('MembersCtrl', MembersCtrl);

  MembersCtrl.$inject = [
    '$scope',
    '$state',
    '$mdDialog',
    'MembersUtils',
    'ColorUtils'
  ];

  function MembersCtrl($scope, $state, $mdDialog, MembersUtils, ColorUtils) {
    $scope.backgroundColor = function () {
      for (var item in $scope.members) {
        $scope.members[item].color = ColorUtils.get();
      }
    };

    MembersUtils
        .all()
        .then(function (response) {
          $scope.members = response.data.data;
            console.log($scope.members);
          $scope.backgroundColor();
        }, function (error) {

        });

    $scope.showModal = function (ev) {
      $mdDialog.show({
            controller: 'CreateMemberCtrl',
            templateUrl: 'components/members/create-member.html',
            targetEvent: ev
          })
          .then(function (answer) {
            console.log(answer)
          }, function () {

          });

    };

    $scope.go = function (state, id) {
      $state.go(state, {id: id});
    };
  }
})();

(function () {
  angular
      .module('football.service.members')
      .factory('MembersUtils', MembersUtils);

  MembersUtils.$inject = [
    '$http',
    '$q',
    'Upload',
    'server_host'
  ];

  function MembersUtils($http, $q, Upload, server_host) {
    return {
      all: function () {
        var defer = $q.defer();

        $http
            .get(server_host + "/api/members")
            .then(function (response) {
              defer.resolve(response)
            }, function (error) {
              defer.reject(error)
            });

        return defer.promise;
      },
      get: function (id) {
        var defer = $q.defer();

        $http
            .get(server_host + "/api/members/" + id)
            .then(function (response) {
              defer.resolve(response)
            }, function (error) {
              defer.reject(error)
            });

        return defer.promise;
      },
      create: function (data) {
        var defer = $q.defer();

        Upload.upload({
          url: server_host + "/api/members",
          data: data
        }).then(function (resp) {
          defer.resolve(resp);
        }, function (resp) {
          console.log('Error status: ' + resp.status);

          defer.reject(resp)
        }, function (evt) {
          var progressPercentage = parseInt(100.0 * evt.loaded / evt.total);
          //console.log('progress: ' + progressPercentage + '% ' + evt.config.data.file.name);
        });

        return defer.promise;
      }
    }
  }
})();

(function () {
  angular
      .module('football.controller.tags')
      .controller('TagCtrl', TagCtrl)
  ;

  TagCtrl.$inject = [
    '$scope',
    '$state',
    '$stateParams',
    'TagsUtils',
      'ColorUtils'
  ];

  function TagCtrl($scope, $state, $stateParams, TagsUtils,ColorUtils) {
    TagsUtils
        .get($stateParams.id)
        .then(function (response) {
          $scope.tag = response.data;
          $scope.tag.color = ColorUtils.get();
        }, function (error) {

        });

    $scope.go = function (state, id) {
      $state.go(state, {id: id});
    };
  }
})();

(function () {
  angular
      .module('football.service.tags')
      .factory('TagsUtils', TagsUtils)
  ;

  TagsUtils.$inject = [
    '$http',
    '$q',
    'server_host'
  ];

  function TagsUtils($http, $q, server_host) {
    return {
      get: function (id) {
        var defer = $q.defer();

        $http
            .get(server_host + "/api/tags/" + id)
            .then(function (response) {
              defer.resolve(response)
            }, function (error) {
              defer.reject(error)
            });

        return defer.promise;
      }
    }
  }
})();

(function () {
  angular
      .module('football.menu')
      .controller('MenuMobileController', MenuMobileController);

  MenuMobileController.$inject = ['$mdBottomSheet'];

  function MenuMobileController($mdBottomSheet) {
    var vm = this;

    vm.menuMobile = function ($index) {
      $mdBottomSheet.hide($index);
    };
  }
})();
